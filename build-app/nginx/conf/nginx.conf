user nginx;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Number of file descriptors used for Nginx
# The limit for the maximum descriptors on the server is usually set by the OS.
# If you don't set descriptors, then OS settings will be used which is by default 2000
worker_rlimit_nofile 4096;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger.
error_log stderr warn;

pid /var/run/nginx.pid;

events {
    # The maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 2048;

    # Accept as many connections as possible if worker_connections is too low
    multi_accept on;

    # Preferred connection method for newer linux versions.
    # Essential for linux, optmized to serve many clients with each thread.
    use epoll;
}

http {
     # Includes mapping of file name extensions to MIME types of responses and defines the default type.
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;

    # Don't tell nginx version to clients.
    server_tokens off;

    # Specifies the maximum accepted body size of a client request, as
    # indicated by the request header Content-Length. If the stated content
    # length is greater than this size, then the client receives the HTTP
    # error code 413. Set to 0 to disable.
    client_max_body_size 64m;

    # This handles the client buffer size, meaning any POST actions sent to Nginx. POST actions are typically form submissions.
    #client_body_buffer_size 50K;

    # Similar to the previous directive, only instead it handles the client header size.
    #client_header_buffer_size 2k;

    # The maximum number and size of buffers for large client headers.
    #large_client_header_buffers 4 8k;

    # Timeout for keep-alive connections. Server will close connections after this time.
    # Higher number then 60 is for Internal network only because of LB
    keepalive_timeout 300;

    # Sendfile copies data between one FD and other from within the kernel,
    # which is more efficient than read() + write().
    sendfile on;

    # Don't buffer data-sends (disable Nagle algorithm).
    # Good for sending frequent small bursts of data in real time.
    tcp_nodelay on;

    # Causes nginx to attempt to send its HTTP response head in one packet,
    # instead of using partial frames.
    tcp_nopush on;

    # Enable gzipping of responses.
    gzip on;
    gzip_comp_level 2;
    gzip_min_length 500;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;

    # Set the Vary HTTP header as defined in the RFC 2616.
    gzip_vary on;

    # Enable checking the existence of precompressed files.
    #gzip_static on;

    # Specifies the main log format.
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';

    # Sets the path, format, and configuration for a buffered log write.
    access_log off;

    # Includes virtual hosts configs.
    include /etc/nginx/conf.d/*.conf;
}
